name: Angular Automation
on:
  push:
    branches: [development,RC_*]
env:
  SERVER: CIN
  NUGET_PATH: C:\NuGet\nuget.exe
  MSBUILD_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin\msbuild.exe
  CINR_DEPLOY_PATH: \\HF2CINMYDLW01.amr.corp.intel.com\MyDeals
  CINR_DEPLOY_SERVER: HF2CINMYDLW01.amr.corp.intel.com

jobs:     
  Restore-packages:
     if: github.repository == 'intel-innersource/applications.web.mydeals.webui'
     runs-on: [self-hosted, mydeals-runner01]
     steps:
       - name: Checkout Directory
         uses: actions/checkout@master
       - name: Restore NUGET Packages 
         run: |
            echo "RUN NUGET Packages script at ${{env.NUGET_PATH}}"
            ./scripts/build_env.ps1 'nuget' '${{env.NUGET_PATH}}' '${{github.workspace}}'

  Build-Angular:
    if: github.repository == 'intel-innersource/applications.web.mydeals.webui'
    runs-on: [self-hosted, mydeals-runner01]
    needs: Restore-packages
    steps:
       - name: Replace Handsontable License Key in config file
         run: |
           $licenseKey = '${{ vars.HANDSONTABLE_LICENSE_KEY }}'
           $configPath = "${{ github.workspace }}/Intel.MyDeals/Client/src/app/shared/config/handsontable.licenseKey.config.ts"
           (Get-Content -Path $configPath -Raw) -replace 'non-commercial-and-evaluation', $licenseKey | Set-Content -Path $configPath
         shell: pwsh
       - name: NPM Install 
         run: |
           ./scripts/build_env.ps1 'NPMInstall' 'path' '${{github.workspace}}'
       - name: NPM Build
         run: |
           ./scripts/build_env.ps1 'NPMBuild' 'path' '${{github.workspace}}'
         env:
           KENDO_UI_LICENSE: ${{ vars.KENDO_UI_LICENSE }}
       - name: MS build publish
         run: |
            ./scripts/build_env.ps1 'MSBuild' '${{env.MSBUILD_PATH}}' '${{github.workspace}}'

  Angular_deploy:
    if: github.repository == 'intel-innersource/applications.web.mydeals.webui'
    runs-on: [self-hosted, mydeals-runner01]
    needs: Build-Angular
    steps:
       - name:  Move Publish Site 
         run: |
           ./scripts/build_env.ps1 'MovePublish' '${{env.CINR_DEPLOY_PATH}}' '${{github.workspace}}'
      #  - name:  Generate Client Zip Module
      #    run: |
      #      ./scripts/build_env.ps1 'ClientZip' '${{env.CINR_DEPLOY_PATH}}' '${{github.workspace}}'

      #  - name:  Remove Client Zip
      #    run: |
      #      ./scripts/deploy_env.ps1 'RemoveZipENV' '${{ vars.USN }}' '${{ vars.PWD }}' '${{env.SERVER}}'
      #  - name:  Copy Client Zip
      #    run: |
      #      ./scripts/deploy_env.ps1 'CopyZipENV' '${{ vars.USN }}' '${{ vars.PWD }}' '${{env.SERVER}}'
       - name:  Deploy Client App
         run: |
           ./scripts/deploy_env.ps1 'DeployENV' '${{ vars.USN }}' '${{ vars.PWD }}' '${{env.SERVER}}'
  
  RunSquawker-Regular:
    name: Run Squawker 
    runs-on: [gasp]
    needs: Angular_deploy
    container: "amr-registry.caas.intel.com/squirrels/nodelts-alpine-git-cf:latest"
    timeout-minutes: 5
    continue-on-error: true
    steps:
       - name:  Squawk for TWC CICD
         uses: intel-innersource/frameworks.actions.squawker@v3
         with:
          squawk_iap: '14464'
          squawk_team: '3179'
          application_name: 'MyDeals'
          repo_url: ${{ github.repositoryUrl }}
          squawk_environment_name: 'DEV'   
 