name: MyDeals Angular pre-prod manual 
on:
  workflow_dispatch:
    inputs:
      ENV:
        description: 'ENV'
        required: true
        default: 'CIN'
        type: choice
        options:
          - 'CIN'
          - 'DEV'
          - 'ITT'
          - 'DAY1'
          - 'EUT'
          - 'UTT1'
          - 'UTT2'
          - 'CONS1'
          - 'CONS2'
      Move_Latest:
        description: 'Move latest code deployed'
        required: true
        type: choice
        default: 'no'
        options:
          - 'yes'
          - 'no'
      Send_Build_Commits:
        description: 'Send email for the build commit list'
        required: true
        type: choice
        default: 'no'
        options:
          - 'yes'
          - 'no'
env:
  NUGET_PATH: C:\NuGet\nuget.exe
  MSBUILD_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin\msbuild.exe
jobs:
  Verify-environement:
     if: github.repository == 'intel-innersource/applications.web.mydeals.webui'
     runs-on: [self-hosted,mydeals-runner01]
     steps:
       - name: Verify environement 
         run: |
            echo "RUN Verify command for ${{github.event.inputs.ENV}}"
             C:\Abhilash\deploy_env.ps1 'verifyENV' '${{ vars.USN }}' '${{ vars.PWD }}' '${{github.event.inputs.ENV}}'
  
  Checkout-Repo:
     if: (github.repository == 'intel-innersource/applications.web.mydeals.webui') && (github.event.inputs.Move_Latest == 'no')
     runs-on: [self-hosted,mydeals-runner01]
     needs:  Verify-environement
     steps:
       - name: Checkout Directory
         uses: actions/checkout@master

  Restore-packages:
     if: (github.repository == 'intel-innersource/applications.web.mydeals.webui') && (github.event.inputs.Move_Latest == 'no') 
     runs-on: [self-hosted,mydeals-runner01]
     needs:  Checkout-Repo
     steps:
       - name: Checkout Directory
         uses: actions/checkout@master
       - name: Restore NUGET Packages 
         run: |
            echo "RUN NUGET Packages script at ${{env.NUGET_PATH}}"
            ./scripts/build_env.ps1 'nuget' '${{env.NUGET_PATH}}' '${{github.workspace}}'

  Build-Angular:
    if: (github.repository == 'intel-innersource/applications.web.mydeals.webui') && (github.event.inputs.Move_Latest == 'no')
    runs-on: [self-hosted, mydeals-runner01]
    needs: Restore-packages
    steps:
       - name: Replace Handsontable License Key in config file
         run: |
           $licenseKey = '${{ vars.HANDSONTABLE_LICENSE_KEY }}'
           $configPath = "${{ github.workspace }}/Intel.MyDeals/Client/src/app/shared/config/handsontable.licenseKey.config.ts"
           (Get-Content -Path $configPath -Raw) -replace 'non-commercial-and-evaluation', $licenseKey | Set-Content -Path $configPath
         shell: pwsh
       - name: NPM Install 
         run: |
           ./scripts/build_env.ps1 'NPMInstall' 'path' '${{github.workspace}}'
       - name: NPM Build
         run: |
           ./scripts/build_env.ps1 'NPMBuild' 'path' '${{github.workspace}}'
       - name: MS build publish
         run: |
            ./scripts/build_env.ps1 'MSBuild' '${{env.MSBUILD_PATH}}' '${{github.workspace}}'

  Deploy-Angular:
    if: (github.repository == 'intel-innersource/applications.web.mydeals.webui') && (github.event.inputs.Move_Latest == 'no')
    runs-on: [self-hosted, mydeals-runner01]
    needs: Build-Angular
    environment:
      name: ${{ github.event.inputs.ENV }}
    steps:
      #  - name:  Generate Client Zip Module  
      #    run: |
      #      ./scripts/build_env.ps1 'ClientZip' '${{github.event.inputs.ENV}}' '${{github.workspace}}'
       - name:  Move Publish Site 
         run: |
           ./scripts/deploy_env.ps1 'MovePublishENV' '${{ vars.APIGEE_KEY }}' '${{ vars.APIGEE_SECRETE }}' '${{github.event.inputs.ENV}}'
      #  - name:  Remove Client Zip 
      #    run: |
      #      ./scripts/deploy_env.ps1 'RemoveZipENV' '${{ vars.USN }}' '${{ vars.PWD }}' '${{github.event.inputs.ENV}}'
      #  - name:  Copy Client Zip 
      #    run: |
      #      ./scripts/deploy_env.ps1 'CopyZipENV' '${{ vars.USN }}' '${{ vars.PWD }}' '${{github.event.inputs.ENV}}'
       - name:  Deploy Client App 
         run: |
           ./scripts/deploy_env.ps1 'DeployENV' '${{ vars.USN }}' '${{ vars.PWD }}' '${{github.event.inputs.ENV}}'
       - name:  Copy Publish Site to latest folder
         run: |
           ./scripts/deploy_env.ps1 'copy_latestENV' '${{ vars.USN }}' '${{ vars.PWD }}' '${{ github.event.inputs.ENV }}'  
       - name: Email Build Commit list
         if: ${{ github.event.inputs.Send_Build_Commits }} == 'yes'
         run: |
            ./scripts/deploy_env.ps1 'build_commit_list' '${{ github.event.inputs.Send_Build_Commits }}' '${{ vars.PWD }}' '${{ github.event.inputs.ENV }}'

  Deploy_Latest:
    if: (github.repository == 'intel-innersource/applications.web.mydeals.webui') && (github.event.inputs.Move_Latest == 'yes')
    runs-on: [self-hosted, mydeals-runner01]
    needs: Verify-environement
    environment:
      name: ${{ github.event.inputs.ENV }}
    steps:
      #  - name:  Remove Client Zip 
      #    run: |
      #      C:\Abhilash\deploy_env.ps1 'RemoveZipENV' '${{ vars.USN }}' '${{ vars.PWD }}' '${{github.event.inputs.ENV}}'
       - name:  Move Publish Site 
         run: |
           C:\Abhilash\deploy_env.ps1 'MovePublish_latest' '${{ vars.USN }}' '${{ vars.PWD }}' '${{github.event.inputs.ENV}}'
       - name:  Deploy Client App 
         run: |
           C:\Abhilash\deploy_env.ps1 'DeployENV' '${{ vars.USN }}' '${{ vars.PWD }}' '${{github.event.inputs.ENV}}'
       - name: Email Build Commit list
         if: ${{ github.event.inputs.Send_Build_Commits }} == 'yes'
         run: |
            C:\Abhilash\deploy_env.ps1 'build_commit_list' '${{  github.event.inputs.Send_Build_Commits }}' '${{ vars.PWD }}' '${{ github.event.inputs.ENV }}'
  
  RunSquawker-Regular:
    name: Run Squawker 
    runs-on: [gasp]
    needs: Deploy-Angular
    container: "amr-registry.caas.intel.com/squirrels/nodelts-alpine-git-cf:latest"
    timeout-minutes: 5
    continue-on-error: true
    steps:
       - name:  Squawk for TWC CICD
         uses: intel-innersource/frameworks.actions.squawker@v3
         with:
          squawk_iap: '14464'
          squawk_team: '3179'
          application_name: 'MyDeals'
          repo_url: ${{ github.repositoryUrl }}
          squawk_environment_name: '${{github.event.inputs.ENV}}'   
  
  RunSquawker-Latest:
    name: Run Squawker 
    runs-on: [gasp]
    needs: Deploy_Latest
    container: "amr-registry.caas.intel.com/squirrels/nodelts-alpine-git-cf:latest"
    timeout-minutes: 5
    continue-on-error: true
    steps:
       - name:  Squawk for TWC CICD
         uses: intel-innersource/frameworks.actions.squawker@v3
         with:
          squawk_iap: '14464'
          squawk_team: '3179'
          application_name: 'MyDeals'
          repo_url: ${{ github.repositoryUrl }}
          squawk_environment_name: '${{github.event.inputs.ENV}}' 